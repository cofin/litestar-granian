name: Tests And Linting

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.9

      - name: Create virtual environment
        run: uv sync --all-extras --dev

      - name: Install Pre-Commit hooks
        run: uv run pre-commit install

      - name: Load cached Pre-Commit Dependencies
        id: cached-pre-commit-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit
        run: uv run pre-commit run --show-diff-on-failure --color=always --all-files

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.9

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run mypy
        run: uv run mypy

  pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.9

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run pyright
        run: uv run pyright

  slotscheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install 3.9

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run slotscheck
        run: uv run slotscheck litestar_granian

  test:
    runs-on: [ubuntu-latest,windows-latest,macos-latest]
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Test
        run: uv run pytest -m ""

  # build-docs:
  #   needs:
  #     - validate
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v4

  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v3

  #     - name: Set up Python
  #       run: uv python install 3.12

  #     - name: Install dependencies
  #       run: uv sync --all-extras --dev

  #     - name: Build docs
  #       run: uv run make docs

  #     - name: Save PR number
  #       run: |
  #         echo "${{ github.event.number }}" > .pr_number

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: docs-preview
  #         path: |
  #           docs/_build/html
  #           .pr_number
  #         include-hidden-files: true
